//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JobSearch
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class dbJobSearchEntities : DbContext
    {
        public dbJobSearchEntities()
            : base("name=dbJobSearchEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tbAddJob> tbAddJobs { get; set; }
        public virtual DbSet<tbApplyJob> tbApplyJobs { get; set; }
        public virtual DbSet<tbCompanyReg> tbCompanyRegs { get; set; }
        public virtual DbSet<tbLogin> tbLogins { get; set; }
        public virtual DbSet<tbUserReg> tbUserRegs { get; set; }
    
        public virtual int sp_CompanyReg(Nullable<int> cid, string name, string addr, string email, Nullable<long> phone, string cstatus)
        {
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var addrParameter = addr != null ?
                new ObjectParameter("addr", addr) :
                new ObjectParameter("addr", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(long));
    
            var cstatusParameter = cstatus != null ?
                new ObjectParameter("cstatus", cstatus) :
                new ObjectParameter("cstatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CompanyReg", cidParameter, nameParameter, addrParameter, emailParameter, phoneParameter, cstatusParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_LogId(string una, string pwd)
        {
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_LogId", unaParameter, pwdParameter);
        }
    
        public virtual int sp_Login(Nullable<int> regid, string uname, string pwd, string utype)
        {
            var regidParameter = regid.HasValue ?
                new ObjectParameter("regid", regid) :
                new ObjectParameter("regid", typeof(int));
    
            var unameParameter = uname != null ?
                new ObjectParameter("uname", uname) :
                new ObjectParameter("uname", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            var utypeParameter = utype != null ?
                new ObjectParameter("utype", utype) :
                new ObjectParameter("utype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Login", regidParameter, unameParameter, pwdParameter, utypeParameter);
        }
    
        public virtual int sp_LoginCheck(string una, string pwd, ObjectParameter status)
        {
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_LoginCheck", unaParameter, pwdParameter, status);
        }
    
        public virtual ObjectResult<string> sp_LogType(string una, string pwd)
        {
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_LogType", unaParameter, pwdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_MaxIdLogin()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_MaxIdLogin");
        }
    
        public virtual int sp_UserReg(Nullable<int> uid, string name, string addr, Nullable<int> age, string gender, Nullable<long> phone, string email, string state, string district, Nullable<int> pincode, string qual, Nullable<decimal> cgpa, string skills, string ustatus)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var addrParameter = addr != null ?
                new ObjectParameter("addr", addr) :
                new ObjectParameter("addr", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("age", age) :
                new ObjectParameter("age", typeof(int));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(long));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var districtParameter = district != null ?
                new ObjectParameter("district", district) :
                new ObjectParameter("district", typeof(string));
    
            var pincodeParameter = pincode.HasValue ?
                new ObjectParameter("pincode", pincode) :
                new ObjectParameter("pincode", typeof(int));
    
            var qualParameter = qual != null ?
                new ObjectParameter("qual", qual) :
                new ObjectParameter("qual", typeof(string));
    
            var cgpaParameter = cgpa.HasValue ?
                new ObjectParameter("cgpa", cgpa) :
                new ObjectParameter("cgpa", typeof(decimal));
    
            var skillsParameter = skills != null ?
                new ObjectParameter("skills", skills) :
                new ObjectParameter("skills", typeof(string));
    
            var ustatusParameter = ustatus != null ?
                new ObjectParameter("ustatus", ustatus) :
                new ObjectParameter("ustatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UserReg", uidParameter, nameParameter, addrParameter, ageParameter, genderParameter, phoneParameter, emailParameter, stateParameter, districtParameter, pincodeParameter, qualParameter, cgpaParameter, skillsParameter, ustatusParameter);
        }
    
        public virtual int sp_AddJob(Nullable<int> cid, string jobname, Nullable<int> vacancy, string reqskil, string experience, string qualification, Nullable<int> salary, string location, Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, string jobstatus)
        {
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var jobnameParameter = jobname != null ?
                new ObjectParameter("jobname", jobname) :
                new ObjectParameter("jobname", typeof(string));
    
            var vacancyParameter = vacancy.HasValue ?
                new ObjectParameter("vacancy", vacancy) :
                new ObjectParameter("vacancy", typeof(int));
    
            var reqskilParameter = reqskil != null ?
                new ObjectParameter("reqskil", reqskil) :
                new ObjectParameter("reqskil", typeof(string));
    
            var experienceParameter = experience != null ?
                new ObjectParameter("experience", experience) :
                new ObjectParameter("experience", typeof(string));
    
            var qualificationParameter = qualification != null ?
                new ObjectParameter("qualification", qualification) :
                new ObjectParameter("qualification", typeof(string));
    
            var salaryParameter = salary.HasValue ?
                new ObjectParameter("salary", salary) :
                new ObjectParameter("salary", typeof(int));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var jobstatusParameter = jobstatus != null ?
                new ObjectParameter("jobstatus", jobstatus) :
                new ObjectParameter("jobstatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AddJob", cidParameter, jobnameParameter, vacancyParameter, reqskilParameter, experienceParameter, qualificationParameter, salaryParameter, locationParameter, startdateParameter, enddateParameter, jobstatusParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_cid(string uname, string pwd)
        {
            var unameParameter = uname != null ?
                new ObjectParameter("uname", uname) :
                new ObjectParameter("uname", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_cid", unameParameter, pwdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_getcid(Nullable<int> jid)
        {
            var jidParameter = jid.HasValue ?
                new ObjectParameter("jid", jid) :
                new ObjectParameter("jid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_getcid", jidParameter);
        }
    
        public virtual int sp_check(string qry)
        {
            var qryParameter = qry != null ?
                new ObjectParameter("qry", qry) :
                new ObjectParameter("qry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_check", qryParameter);
        }
    
        public virtual int sp_ApplyJob(Nullable<int> jobid, Nullable<int> cid, Nullable<int> uid, Nullable<System.DateTime> date, string resume, string applystatus)
        {
            var jobidParameter = jobid.HasValue ?
                new ObjectParameter("jobid", jobid) :
                new ObjectParameter("jobid", typeof(int));
    
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var resumeParameter = resume != null ?
                new ObjectParameter("resume", resume) :
                new ObjectParameter("resume", typeof(string));
    
            var applystatusParameter = applystatus != null ?
                new ObjectParameter("applystatus", applystatus) :
                new ObjectParameter("applystatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ApplyJob", jobidParameter, cidParameter, uidParameter, dateParameter, resumeParameter, applystatusParameter);
        }
    }
}
